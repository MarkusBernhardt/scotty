diff --git b/.editorconfig a/.editorconfig
index 864bca4..eba04c3 100644
--- b/.editorconfig
+++ a/.editorconfig
@@ -22,3 +22,6 @@ trim_trailing_whitespace = false
 # Generated by jhipster:java:bootstrap generator
 [*.java]
 indent_size = 4
+
+[*.xml]
+indent_size = 4
diff --git b/angular.json a/angular.json
index 8e447ff..ff5dcce 100644
--- b/angular.json
+++ a/angular.json
@@ -105,6 +105,7 @@
       "path": "./target/angular/",
       "environment": "all"
     },
-    "packageManager": "npm"
+    "packageManager": "npm",
+    "analytics": false
   }
 }
diff --git b/package-lock.json a/package-lock.json
index cc61cb9..ca4c6ea 100644
--- b/package-lock.json
+++ a/package-lock.json
@@ -27,6 +27,7 @@
         "bootstrap": "5.3.3",
         "bootswatch": "5.3.3",
         "dayjs": "1.11.13",
+        "file-saver": "2.0.5",
         "ngx-infinite-scroll": "18.0.0",
         "rxjs": "7.8.1",
         "tslib": "2.8.0",
@@ -39,6 +40,7 @@
         "@angular/cli": "18.2.10",
         "@angular/compiler-cli": "18.2.9",
         "@angular/service-worker": "18.2.9",
+        "@types/file-saver": "2.0.5",
         "@types/jest": "29.5.14",
         "@types/node": "20.11.25",
         "angular-eslint": "18.4.0",
@@ -5293,6 +5295,13 @@
         "@types/send": "*"
       }
     },
+    "node_modules/@types/file-saver": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@types/file-saver/-/file-saver-2.0.5.tgz",
+      "integrity": "sha512-zv9kNf3keYegP5oThGLaPk8E081DFDuwfqjtiTzm6PoxChdJ1raSuADf2YGCVIyrSynLrgc8JWv296s7Q7pQSQ==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/@types/graceful-fs": {
       "version": "4.1.9",
       "dev": true,
@@ -11430,6 +11439,12 @@
         "node": ">=16.0.0"
       }
     },
+    "node_modules/file-saver": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/file-saver/-/file-saver-2.0.5.tgz",
+      "integrity": "sha512-P9bmyZ3h/PRG+Nzga+rbdI4OEpNDzAVyy74uVO9ATgzLK6VtAsYybF/+TOCvrc0MO793d6+42lLyZTw7/ArVzA==",
+      "license": "MIT"
+    },
     "node_modules/filelist": {
       "version": "1.0.4",
       "dev": true,
diff --git b/package.json a/package.json
index 477a3a1..5e66f2e 100644
--- b/package.json
+++ a/package.json
@@ -102,6 +102,7 @@
     "bootstrap": "5.3.3",
     "bootswatch": "5.3.3",
     "dayjs": "1.11.13",
+    "file-saver": "2.0.5",
     "ngx-infinite-scroll": "18.0.0",
     "rxjs": "7.8.1",
     "tslib": "2.8.0",
@@ -114,6 +115,7 @@
     "@angular/cli": "18.2.10",
     "@angular/compiler-cli": "18.2.9",
     "@angular/service-worker": "18.2.9",
+    "@types/file-saver": "2.0.5",
     "@types/jest": "29.5.14",
     "@types/node": "20.11.25",
     "angular-eslint": "18.4.0",
diff --git b/pom.xml a/pom.xml
index f5d713c..60c29a2 100644
--- b/pom.xml
+++ a/pom.xml
@@ -5,7 +5,7 @@
 
     <groupId>de.scmb.scotty</groupId>
     <artifactId>scotty</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
+    <version>0.9.7</version>
     <packaging>jar</packaging>
     <name>Scotty</name>
     <description>Description for Scotty</description>
@@ -23,7 +23,7 @@
             The spring-boot version should match the one managed by https://mvnrepository.com/artifact/tech.jhipster/jhipster-dependencies/${jhipster-dependencies.version}
         -->
         <maven.version>3.2.5</maven.version>
-        <java.version>17</java.version>
+        <java.version>21</java.version>
         <node.version>v22.11.0</node.version>
         <npm.version>10.9.0</npm.version>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
@@ -35,6 +35,10 @@
         <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx1G</argLine>
         <m2e.apt.activation>jdt_apt</m2e.apt.activation>
         <run.addResources>false</run.addResources>
+        <apache-poi.version>5.2.2</apache-poi.version>
+        <emerchantpay-genesis.version>1.17.7</emerchantpay-genesis.version>
+        <jaxb-runtime.version>4.0.4</jaxb-runtime.version>
+        <jaxb-maven-plugin.version>4.0.8</jaxb-maven-plugin.version>
         <spring-boot.version>${project.parent.version}</spring-boot.version>
         <archunit-junit5.version>1.3.0</archunit-junit5.version>
         <checkstyle.version>10.19.0</checkstyle.version>
@@ -74,6 +78,9 @@
         <profile.test/>
         <profile.tls/>
         <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
+        <validation-api.version>3.0.2</validation-api.version>
+        <unirest.version>4.3.1</unirest.version>
+        <opencsv.version>5.9</opencsv.version>
         <resource.delimiter>@</resource.delimiter>
         <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
         <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
@@ -98,6 +105,48 @@
                 <type>pom</type>
                 <scope>import</scope>
             </dependency>
+            <dependency>
+                <groupId>com.emerchantpay.gateway</groupId>
+                <artifactId>genesis-java</artifactId>
+                <version>${emerchantpay-genesis.version}</version>
+                <exclusions>
+                    <exclusion>
+                        <groupId>org.apache.commons</groupId>
+                        <artifactId>commons-text</artifactId>
+                    </exclusion>
+                </exclusions>
+            </dependency>
+            <dependency>
+                <groupId>org.apache.poi</groupId>
+                <artifactId>poi</artifactId>
+                <version>${apache-poi.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>org.apache.poi</groupId>
+                <artifactId>poi-ooxml</artifactId>
+                <version>${apache-poi.version}</version>
+                <exclusions>
+                    <exclusion>
+                        <groupId>org.apache.commons</groupId>
+                        <artifactId>commons-compress</artifactId>
+                    </exclusion>
+                </exclusions>
+            </dependency>
+            <dependency>
+                <groupId>com.konghq</groupId>
+                <artifactId>unirest-java-core</artifactId>
+                <version>${unirest.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.konghq</groupId>
+                <artifactId>unirest-modules-jackson</artifactId>
+                <version>${unirest.version}</version>
+            </dependency>
+            <dependency>
+                <groupId>com.opencsv</groupId>
+                <artifactId>opencsv</artifactId>
+                <version>${opencsv.version}</version>
+            </dependency>
         </dependencies>
     </dependencyManagement>
 
@@ -194,6 +243,10 @@
             <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
             <version>${springdoc-openapi-starter-webmvc-api.version}</version>
         </dependency>
+        <dependency>
+            <groupId>com.emerchantpay.gateway</groupId>
+            <artifactId>genesis-java</artifactId>
+        </dependency>
         <dependency>
             <groupId>com.fasterxml.jackson.datatype</groupId>
             <artifactId>jackson-datatype-hibernate6</artifactId>
@@ -265,6 +318,22 @@
             <groupId>org.apache.commons</groupId>
             <artifactId>commons-lang3</artifactId>
         </dependency>
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi-ooxml</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.konghq</groupId>
+            <artifactId>unirest-java-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.konghq</groupId>
+            <artifactId>unirest-modules-jackson</artifactId>
+        </dependency>
         <dependency>
             <groupId>org.ehcache</groupId>
             <artifactId>ehcache</artifactId>
@@ -337,6 +406,10 @@
             <artifactId>testcontainers</artifactId>
             <scope>test</scope>
         </dependency>
+        <dependency>
+            <groupId>com.opencsv</groupId>
+            <artifactId>opencsv</artifactId>
+        </dependency>
         <dependency>
             <groupId>org.testng</groupId>
             <artifactId>testng</artifactId>
@@ -427,6 +500,10 @@
                 <groupId>org.sonarsource.scanner.maven</groupId>
                 <artifactId>sonar-maven-plugin</artifactId>
             </plugin>
+            <plugin>
+                <groupId>org.jvnet.jaxb</groupId>
+                <artifactId>jaxb-maven-plugin</artifactId>
+            </plugin>
         </plugins>
         <pluginManagement>
             <plugins>
@@ -888,6 +965,22 @@
                     <artifactId>sonar-maven-plugin</artifactId>
                     <version>${sonar-maven-plugin.version}</version>
                 </plugin>
+                <plugin>
+                    <groupId>org.jvnet.jaxb</groupId>
+                    <artifactId>jaxb-maven-plugin</artifactId>
+                    <version>${jaxb-maven-plugin.version}</version>
+                    <configuration>
+                        <schemaDirectory>src/main/xsd</schemaDirectory>
+                        <bindingDirectory>src/main/xjb</bindingDirectory>
+                    </configuration>
+                    <executions>
+                        <execution>
+                            <goals>
+                                <goal>generate</goal>
+                            </goals>
+                        </execution>
+                    </executions>
+                </plugin>
             </plugins>
         </pluginManagement>
     </build>
@@ -907,7 +1000,7 @@
             <properties>
                 <!-- default Spring profiles -->
                 <liquibase-plugin.password>password</liquibase-plugin.password>
-                <liquibase-plugin.url>jdbc:postgresql://localhost:5432/scotty</liquibase-plugin.url>
+                <liquibase-plugin.url>jdbc:postgresql://localhost:5433/scotty</liquibase-plugin.url>
                 <liquibase-plugin.username>scotty</liquibase-plugin.username>
                 <profile.test>testdev</profile.test>
                 <spring.profiles.active>dev${profile.tls}${profile.no-liquibase}</spring.profiles.active>
@@ -1037,7 +1130,7 @@
             <properties>
                 <!-- default Spring profiles -->
                 <liquibase-plugin.password>password</liquibase-plugin.password>
-                <liquibase-plugin.url>jdbc:postgresql://localhost:5432/scotty</liquibase-plugin.url>
+                <liquibase-plugin.url>jdbc:postgresql://localhost:5433/scotty</liquibase-plugin.url>
                 <liquibase-plugin.username>scotty</liquibase-plugin.username>
                 <profile.test>testprod</profile.test>
                 <spring.profiles.active>prod${profile.api-docs}${profile.tls}${profile.e2e}${profile.no-liquibase}</spring.profiles.active>
@@ -1244,5 +1337,88 @@
                 </plugins>
             </build>
         </profile>
+        <profile>
+            <id>heroku</id>
+            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
+            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
+            <properties>
+                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
+                <newrelic.version>8.17.0</newrelic.version>
+            </properties>
+            <dependencyManagement>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.elasticsearch.client</groupId>
+                        <artifactId>elasticsearch-rest-client</artifactId>
+                        <version>${bonsai.elasticsearch.version}</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>org.elasticsearch.client</groupId>
+                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
+                        <version>${bonsai.elasticsearch.version}</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>org.elasticsearch</groupId>
+                        <artifactId>elasticsearch</artifactId>
+                        <version>${bonsai.elasticsearch.version}</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>org.elasticsearch.plugin</groupId>
+                        <artifactId>transport-netty4-client</artifactId>
+                        <version>${bonsai.elasticsearch.version}</version>
+                    </dependency>
+                </dependencies>
+            </dependencyManagement>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.liquibase</groupId>
+                        <artifactId>liquibase-maven-plugin</artifactId>
+                        <configuration combine.self="override">
+                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
+                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
+                            <driver/>
+                            <url>${env.JDBC_DATABASE_URL}</url>
+                            <defaultSchemaName/>
+                            <username>${env.JDBC_DATABASE_USERNAME}</username>
+                            <password>${env.JDBC_DATABASE_PASSWORD}</password>
+                            <referenceUrl>hibernate:spring:de.scmb.scotty.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
+                            <verbose>true</verbose>
+                            <logging>debug</logging>
+                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
+                        </configuration>
+                    </plugin>
+                    <plugin>
+                        <artifactId>maven-clean-plugin</artifactId>
+                        <version>${maven-clean-plugin.version}</version>
+                        <executions>
+                            <execution>
+                                <id>clean-artifacts</id>
+                                <phase>install</phase>
+                                <goals>
+                                    <goal>clean</goal>
+                                </goals>
+                                <configuration>
+                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
+                                    <filesets>
+                                        <fileset>
+                                            <directory>target</directory>
+                                            <excludes>
+                                                <exclude>*.jar</exclude>
+                                            </excludes>
+                                            <followSymlinks>false</followSymlinks>
+                                        </fileset>
+                                        <fileset>
+                                            <directory>node_modules</directory>
+                                            <followSymlinks>false</followSymlinks>
+                                        </fileset>
+                                    </filesets>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 </project>
diff --git b/src/main/docker/postgresql.yml a/src/main/docker/postgresql.yml
index 0712e94..1019b55 100644
--- b/src/main/docker/postgresql.yml
+++ a/src/main/docker/postgresql.yml
@@ -17,4 +17,4 @@ services:
     # If you want to expose these ports outside your dev PC,
     # remove the "127.0.0.1:" prefix
     ports:
-      - 127.0.0.1:5432:5432
+      - 127.0.0.1:5433:5432
diff --git b/src/main/java/de/scmb/scotty/config/ApplicationProperties.java a/src/main/java/de/scmb/scotty/config/ApplicationProperties.java
index 0752776..1f79f04 100644
--- b/src/main/java/de/scmb/scotty/config/ApplicationProperties.java
+++ a/src/main/java/de/scmb/scotty/config/ApplicationProperties.java
@@ -1,6 +1,9 @@
 package de.scmb.scotty.config;
 
+import de.scmb.scotty.domain.enumeration.Gateway;
 import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.scheduling.annotation.Scheduled;
+import org.springframework.scheduling.support.CronExpression;
 
 /**
  * Properties specific to Scotty.
@@ -13,12 +16,48 @@ public class ApplicationProperties {
 
     private final Liquibase liquibase = new Liquibase();
 
+    private final BankingCircle bankingCircle = new BankingCircle();
+
+    private final Emerchantpay emerchantpay = new Emerchantpay();
+
+    private final Novalnet novalnet = new Novalnet();
+
+    private final OpenPayd openPayd = new OpenPayd();
+
+    private final Proxy proxy = new Proxy();
+
+    private final Sepa sepa = new Sepa();
+
     // jhipster-needle-application-properties-property
 
     public Liquibase getLiquibase() {
         return liquibase;
     }
 
+    public BankingCircle getBankingCircle() {
+        return this.bankingCircle;
+    }
+
+    public Emerchantpay getEmerchantpay() {
+        return this.emerchantpay;
+    }
+
+    public Novalnet getNovalnet() {
+        return this.novalnet;
+    }
+
+    public OpenPayd getOpenPayd() {
+        return this.openPayd;
+    }
+
+    public Proxy getProxy() {
+        return this.proxy;
+    }
+
+    public Sepa getSepa() {
+        return this.sepa;
+    }
+
     // jhipster-needle-application-properties-property-getter
 
     public static class Liquibase {
@@ -33,5 +72,361 @@ public class ApplicationProperties {
             this.asyncStart = asyncStart;
         }
     }
+
+    public static class Emerchantpay {
+
+        private boolean enabled;
+
+        private String username;
+
+        private String password;
+
+        private String token;
+
+        private String environment;
+
+        private String notificationUrl;
+
+        private String reconciliationSchedule;
+
+        public Emerchantpay() {}
+
+        public boolean isEnabled() {
+            return enabled;
+        }
+
+        public void setEnabled(boolean enabled) {
+            this.enabled = enabled;
+        }
+
+        public String getUsername() {
+            return username;
+        }
+
+        public void setUsername(String username) {
+            this.username = username;
+        }
+
+        public String getPassword() {
+            return password;
+        }
+
+        public void setPassword(String password) {
+            this.password = password;
+        }
+
+        public String getToken() {
+            return token;
+        }
+
+        public void setToken(String token) {
+            this.token = token;
+        }
+
+        public String getEnvironment() {
+            return environment;
+        }
+
+        public void setEnvironment(String environment) {
+            this.environment = environment;
+        }
+
+        public String getNotificationUrl() {
+            return notificationUrl;
+        }
+
+        public void setNotificationUrl(String notificationUrl) {
+            this.notificationUrl = notificationUrl;
+        }
+
+        public String getReconciliationSchedule() {
+            return reconciliationSchedule;
+        }
+
+        public void setReconciliationSchedule(String reconciliationSchedule) {
+            this.reconciliationSchedule = reconciliationSchedule;
+        }
+    }
+
+    public static class Proxy {
+
+        private String host;
+
+        private int port;
+
+        private String username;
+
+        private String password;
+
+        private String nonProxyHosts;
+
+        public Proxy() {}
+
+        public String getHost() {
+            return host;
+        }
+
+        public void setHost(String host) {
+            this.host = host;
+        }
+
+        public int getPort() {
+            return port;
+        }
+
+        public void setPort(int port) {
+            this.port = port;
+        }
+
+        public String getUsername() {
+            return username;
+        }
+
+        public void setUsername(String user) {
+            this.username = user;
+        }
+
+        public String getPassword() {
+            return password;
+        }
+
+        public void setPassword(String password) {
+            this.password = password;
+        }
+
+        public String getNonProxyHosts() {
+            return nonProxyHosts;
+        }
+
+        public void setNonProxyHosts(String nonProxyHosts) {
+            this.nonProxyHosts = nonProxyHosts;
+        }
+    }
+
+    public static class Novalnet {
+
+        private boolean enabled;
+
+        private String baseUrl;
+
+        private String signature;
+
+        private String paymentAccessKey;
+
+        private String testMode;
+
+        private String tariff;
+
+        private String subscriptionTariff;
+
+        private String webhookUrl;
+
+        public Novalnet() {}
+
+        public boolean isEnabled() {
+            return enabled;
+        }
+
+        public void setEnabled(boolean enabled) {
+            this.enabled = enabled;
+        }
+
+        public String getBaseUrl() {
+            return baseUrl;
+        }
+
+        public void setBaseUrl(String baseUrl) {
+            this.baseUrl = baseUrl;
+        }
+
+        public String getSignature() {
+            return signature;
+        }
+
+        public void setSignature(String signature) {
+            this.signature = signature;
+        }
+
+        public String getPaymentAccessKey() {
+            return paymentAccessKey;
+        }
+
+        public void setPaymentAccessKey(String paymentAccessKey) {
+            this.paymentAccessKey = paymentAccessKey;
+        }
+
+        public String getTestMode() {
+            return testMode;
+        }
+
+        public void setTestMode(String testMode) {
+            this.testMode = testMode;
+        }
+
+        public String getTariff() {
+            return tariff;
+        }
+
+        public void setTariff(String tariff) {
+            this.tariff = tariff;
+        }
+
+        public String getSubscriptionTariff() {
+            return subscriptionTariff;
+        }
+
+        public void setSubscriptionTariff(String subscriptionTariff) {
+            this.subscriptionTariff = subscriptionTariff;
+        }
+
+        public String getWebhookUrl() {
+            return webhookUrl;
+        }
+
+        public void setWebhookUrl(String webhookUrl) {
+            this.webhookUrl = webhookUrl;
+        }
+    }
+
+    public static class OpenPayd {
+
+        private boolean enabled;
+
+        private String baseUrl;
+
+        private String username;
+
+        private String password;
+
+        private String accountId;
+
+        private String accountHolderId;
+
+        public OpenPayd() {}
+
+        public boolean isEnabled() {
+            return enabled;
+        }
+
+        public void setEnabled(boolean enabled) {
+            this.enabled = enabled;
+        }
+
+        public String getBaseUrl() {
+            return baseUrl;
+        }
+
+        public void setBaseUrl(String baseUrl) {
+            this.baseUrl = baseUrl;
+        }
+
+        public String getUsername() {
+            return username;
+        }
+
+        public void setUsername(String username) {
+            this.username = username;
+        }
+
+        public String getPassword() {
+            return password;
+        }
+
+        public void setPassword(String password) {
+            this.password = password;
+        }
+
+        public String getAccountId() {
+            return accountId;
+        }
+
+        public void setAccountId(String accountId) {
+            this.accountId = accountId;
+        }
+
+        public String getAccountHolderId() {
+            return accountHolderId;
+        }
+
+        public void setAccountHolderId(String accountHolderId) {
+            this.accountHolderId = accountHolderId;
+        }
+    }
+
+    public static class BankingCircle {
+
+        private boolean enabled;
+
+        private String baseUrl;
+
+        private String authorizationUrl;
+
+        private String certificate;
+
+        private String username;
+
+        private String password;
+
+        public boolean isEnabled() {
+            return enabled;
+        }
+
+        public void setEnabled(boolean enabled) {
+            this.enabled = enabled;
+        }
+
+        public String getBaseUrl() {
+            return baseUrl;
+        }
+
+        public void setBaseUrl(String baseUrl) {
+            this.baseUrl = baseUrl;
+        }
+
+        public String getAuthorizationUrl() {
+            return authorizationUrl;
+        }
+
+        public void setAuthorizationUrl(String authorizationUrl) {
+            this.authorizationUrl = authorizationUrl;
+        }
+
+        public String getCertificate() {
+            return certificate;
+        }
+
+        public void setCertificate(String certificate) {
+            this.certificate = certificate;
+        }
+
+        public String getUsername() {
+            return username;
+        }
+
+        public void setUsername(String username) {
+            this.username = username;
+        }
+
+        public String getPassword() {
+            return password;
+        }
+
+        public void setPassword(String password) {
+            this.password = password;
+        }
+    }
+
+    public static class Sepa {
+
+        private Gateway gateway;
+
+        public Gateway getGateway() {
+            return gateway;
+        }
+
+        public void setGateway(Gateway gateway) {
+            this.gateway = gateway;
+        }
+    }
     // jhipster-needle-application-properties-property-class
 }
diff --git b/src/main/java/de/scmb/scotty/config/SecurityConfiguration.java a/src/main/java/de/scmb/scotty/config/SecurityConfiguration.java
index ac15ff6..21f488c 100644
--- b/src/main/java/de/scmb/scotty/config/SecurityConfiguration.java
+++ a/src/main/java/de/scmb/scotty/config/SecurityConfiguration.java
@@ -69,6 +69,8 @@ public class SecurityConfiguration {
                     .requestMatchers(mvc.pattern("/api/activate")).permitAll()
                     .requestMatchers(mvc.pattern("/api/account/reset-password/init")).permitAll()
                     .requestMatchers(mvc.pattern("/api/account/reset-password/finish")).permitAll()
+                    .requestMatchers(mvc.pattern("/api/webhooks/novalnet")).permitAll()
+                    .requestMatchers(mvc.pattern("/api/webhooks/openpayd")).permitAll()
                     .requestMatchers(mvc.pattern("/api/admin/**")).hasAuthority(AuthoritiesConstants.ADMIN)
                     .requestMatchers(mvc.pattern("/api/**")).authenticated()
                     .requestMatchers(mvc.pattern("/v3/api-docs/**")).hasAuthority(AuthoritiesConstants.ADMIN)
diff --git b/src/main/java/de/scmb/scotty/service/UserService.java a/src/main/java/de/scmb/scotty/service/UserService.java
index 7a6258f..668c36b 100644
--- b/src/main/java/de/scmb/scotty/service/UserService.java
+++ a/src/main/java/de/scmb/scotty/service/UserService.java
@@ -93,48 +93,6 @@ public class UserService {
             });
     }
 
-    public User registerUser(AdminUserDTO userDTO, String password) {
-        userRepository
-            .findOneByLogin(userDTO.getLogin().toLowerCase())
-            .ifPresent(existingUser -> {
-                boolean removed = removeNonActivatedUser(existingUser);
-                if (!removed) {
-                    throw new UsernameAlreadyUsedException();
-                }
-            });
-        userRepository
-            .findOneByEmailIgnoreCase(userDTO.getEmail())
-            .ifPresent(existingUser -> {
-                boolean removed = removeNonActivatedUser(existingUser);
-                if (!removed) {
-                    throw new EmailAlreadyUsedException();
-                }
-            });
-        User newUser = new User();
-        String encryptedPassword = passwordEncoder.encode(password);
-        newUser.setLogin(userDTO.getLogin().toLowerCase());
-        // new user gets initially a generated password
-        newUser.setPassword(encryptedPassword);
-        newUser.setFirstName(userDTO.getFirstName());
-        newUser.setLastName(userDTO.getLastName());
-        if (userDTO.getEmail() != null) {
-            newUser.setEmail(userDTO.getEmail().toLowerCase());
-        }
-        newUser.setImageUrl(userDTO.getImageUrl());
-        newUser.setLangKey(userDTO.getLangKey());
-        // new user is not active
-        newUser.setActivated(false);
-        // new user gets registration key
-        newUser.setActivationKey(RandomUtil.generateActivationKey());
-        Set<Authority> authorities = new HashSet<>();
-        authorityRepository.findById(AuthoritiesConstants.USER).ifPresent(authorities::add);
-        newUser.setAuthorities(authorities);
-        userRepository.save(newUser);
-        this.clearUserCaches(newUser);
-        LOG.debug("Created Information for User: {}", newUser);
-        return newUser;
-    }
-
     private boolean removeNonActivatedUser(User existingUser) {
         if (existingUser.isActivated()) {
             return false;
diff --git b/src/main/java/de/scmb/scotty/service/mapper/PaymentMapper.java a/src/main/java/de/scmb/scotty/service/mapper/PaymentMapper.java
index dd066bb..fa2e5ca 100644
--- b/src/main/java/de/scmb/scotty/service/mapper/PaymentMapper.java
+++ a/src/main/java/de/scmb/scotty/service/mapper/PaymentMapper.java
@@ -8,4 +8,14 @@ import org.mapstruct.*;
  * Mapper for the entity {@link Payment} and its DTO {@link PaymentDTO}.
  */
 @Mapper(componentModel = "spring")
-public interface PaymentMapper extends EntityMapper<PaymentDTO, Payment> {}
+public interface PaymentMapper extends EntityMapper<PaymentDTO, Payment> {
+    @Override
+    @Mapping(target = "reconciliations", ignore = true)
+    @Mapping(target = "removeReconciliation", ignore = true)
+    Payment toEntity(PaymentDTO p);
+
+    @Override
+    @Mapping(target = "reconciliations", ignore = true)
+    @Mapping(target = "removeReconciliation", ignore = true)
+    void partialUpdate(@MappingTarget Payment entity, PaymentDTO dto);
+}
diff --git b/src/main/java/de/scmb/scotty/service/mapper/ReconciliationMapper.java a/src/main/java/de/scmb/scotty/service/mapper/ReconciliationMapper.java
index b777e44..99d264b 100644
--- b/src/main/java/de/scmb/scotty/service/mapper/ReconciliationMapper.java
+++ a/src/main/java/de/scmb/scotty/service/mapper/ReconciliationMapper.java
@@ -11,11 +11,26 @@ import org.mapstruct.*;
  */
 @Mapper(componentModel = "spring")
 public interface ReconciliationMapper extends EntityMapper<ReconciliationDTO, Reconciliation> {
+    @Override
     @Mapping(target = "scottyPayment", source = "scottyPayment", qualifiedByName = "paymentId")
     ReconciliationDTO toDto(Reconciliation s);
 
+    @Override
+    @Mapping(target = "scottyPayment", source = "scottyPayment", qualifiedByName = "reconciliationSet")
+    Reconciliation toEntity(ReconciliationDTO s);
+
+    @Override
+    @Mapping(target = "scottyPayment", source = "scottyPayment", qualifiedByName = "reconciliationSet")
+    void partialUpdate(@MappingTarget Reconciliation entity, ReconciliationDTO dto);
+
     @Named("paymentId")
     @BeanMapping(ignoreByDefault = true)
     @Mapping(target = "id", source = "id")
     PaymentDTO toDtoPaymentId(Payment payment);
+
+    @Named("reconciliationSet")
+    @BeanMapping(ignoreByDefault = true)
+    @Mapping(target = "reconciliations", ignore = true)
+    @Mapping(target = "removeReconciliation", ignore = true)
+    Payment toEntityReconciliationSet(PaymentDTO s);
 }
diff --git b/src/main/java/de/scmb/scotty/web/rest/AccountResource.java a/src/main/java/de/scmb/scotty/web/rest/AccountResource.java
index 641843e..2a9ac09 100644
--- b/src/main/java/de/scmb/scotty/web/rest/AccountResource.java
+++ a/src/main/java/de/scmb/scotty/web/rest/AccountResource.java
@@ -46,24 +46,6 @@ public class AccountResource {
         this.mailService = mailService;
     }
 
-    /**
-     * {@code POST  /register} : register the user.
-     *
-     * @param managedUserVM the managed user View Model.
-     * @throws InvalidPasswordException {@code 400 (Bad Request)} if the password is incorrect.
-     * @throws EmailAlreadyUsedException {@code 400 (Bad Request)} if the email is already used.
-     * @throws LoginAlreadyUsedException {@code 400 (Bad Request)} if the login is already used.
-     */
-    @PostMapping("/register")
-    @ResponseStatus(HttpStatus.CREATED)
-    public void registerAccount(@Valid @RequestBody ManagedUserVM managedUserVM) {
-        if (isPasswordLengthInvalid(managedUserVM.getPassword())) {
-            throw new InvalidPasswordException();
-        }
-        User user = userService.registerUser(managedUserVM, managedUserVM.getPassword());
-        mailService.sendActivationEmail(user);
-    }
-
     /**
      * {@code GET  /activate} : activate the registered user.
      *
diff --git b/src/main/resources/config/application-dev.yml a/src/main/resources/config/application-dev.yml
index 59febe5..cf2b29f 100644
--- b/src/main/resources/config/application-dev.yml
+++ a/src/main/resources/config/application-dev.yml
@@ -32,7 +32,7 @@ spring:
       indent-output: true
   datasource:
     type: com.zaxxer.hikari.HikariDataSource
-    url: jdbc:postgresql://localhost:5432/scotty
+    url: jdbc:postgresql://localhost:5433/scotty
     username: scotty
     password: password
     hikari:
@@ -40,7 +40,7 @@ spring:
       auto-commit: false
   liquibase:
     # Remove 'faker' if you do not want the sample data to be loaded automatically
-    contexts: dev, faker
+    contexts: dev
   mail:
     host: localhost
     port: 25
@@ -104,4 +104,48 @@ jhipster:
 # https://www.jhipster.tech/common-application-properties/
 # ===================================================================
 
-# application:
+application:
+  emerchantpay:
+    enabled: true
+    # environment: 'production'
+    # password: 'd8b68a25643baee9fa42aa785be1d13dea52e824'
+    # username: '3091957bcd0e1c4b83152e7ca3832530953a4833'
+    # token: '211db50061148b993717e9d57e65314dbcdf865f'
+    environment: 'staging'
+    password: '966c0b1b25b0208020df14703edfb36b9207829d'
+    username: '5ad798f33882146de4cfdfc401950fb48f9bc0af'
+    token: '3c1fbbbf8b3e23eff60009f4ae5260297abf62ab'
+    notification-url: 'ftp://beam-me-up-scotty-85521471-9f8f0d090a9a.herokuapp.com/webhooks/emerchantpay'
+    reconciliation-schedule: '0 0 4 * * *'
+  novalnet:
+    enabled: true
+    base-url: 'https://payport.novalnet.de/v2'
+    # test-mode: '0'
+    # signature: 'dli0ponttqqoFTxWtwJhFaoTp|uv|bobljbc7ob5f|uy|63mHqRTdlci7p1Ottq7cpn7pc'
+    # payment-access-key: 'eeb358fcbf46e89566ad3fe0707820a0'
+    # tariff: '14694'
+    test-mode: '1'
+    signature: '7ibc7ob5|qxJEH3gNbeWJfIHah||nbobljbnmdli0povq|doU3HJVoym7MQ44qf7cpn7pc'
+    payment-access-key: 'a87ff679a2f3e71d9181a67b7542122c'
+    tariff: '12983'
+    web-hook-url: 'https://beam-me-up-scotty-85521471-9f8f0d090a9a.herokuapp.com/api/webhooks/novalnet'
+  openpayd:
+    enabled: true
+    # base-url: 'https://sandbox-mt.openpayd.com'
+    # username: 'Aldgate_Test'
+    # password: 'zqCD#+335L'
+    # account-id: 'd2VsSno0aDVOVHM3bUMvSytSQ0VVUT09'
+    # account-holder-id: 'e5de5f27-07f8-4578-9fb0-ce277feca507'
+    base-url: 'https://secure-mt.openpayd.com'
+    username: 'npa_Nexus'
+    password: '5*RKkH1Z$a'
+    account-id: 'NG5wTElNZ1RhN3hveDNtNG82V1IxQT09'
+    account-holder-id: '16df62ec-541e-461e-9c21-10838ecb8d93'
+  proxy:
+    host: 'eu-west-static-01.quotaguard.com'
+    port: 9293
+    username: 'nltnshun9adjc6'
+    password: 'r9h154ah4wkrbk39jgjpyugr6ft'
+    non-proxy-hosts: 'payport.novalnet.de|sandbox-mt.openpayd.com|secure-mt.openpayd.com'
+  sepa:
+    gateway: bankingcircle
diff --git b/src/main/resources/config/application-prod.yml a/src/main/resources/config/application-prod.yml
index 6c1a0c4..61e411b 100644
--- b/src/main/resources/config/application-prod.yml
+++ a/src/main/resources/config/application-prod.yml
@@ -33,7 +33,7 @@ spring:
       enabled: false
   datasource:
     type: com.zaxxer.hikari.HikariDataSource
-    url: jdbc:postgresql://localhost:5432/scotty
+    url: jdbc:postgresql://localhost:5433/scotty
     username: scotty
     password: password
     hikari:
@@ -121,4 +121,18 @@ jhipster:
 # https://www.jhipster.tech/common-application-properties/
 # ===================================================================
 
-# application:
+application:
+  emerchantpay:
+    enabled: false
+  novalnet:
+    enabled: false
+  openpayd:
+    enabled: false
+  proxy:
+    host: 'eu-west-static-01.quotaguard.com'
+    port: 9293
+    username: 'nltnshun9adjc6'
+    password: 'r9h154ah4wkrbk39jgjpyugr6ft'
+    non-proxy-hosts: 'payport.novalnet.de|secure-mt.openpayd.com'
+  sepa:
+    gateway: bankingcircle
diff --git b/src/main/resources/config/application.yml a/src/main/resources/config/application.yml
index d081e6c..7a89ab8 100644
--- b/src/main/resources/config/application.yml
+++ a/src/main/resources/config/application.yml
@@ -166,6 +166,9 @@ spring:
   output:
     ansi:
       console-available: true
+  servlet:
+    multipart:
+      max-file-size: 10MB
 
 server:
   servlet:
diff --git b/src/main/webapp/app/account/account.route.ts a/src/main/webapp/app/account/account.route.ts
index a1a8b46..b031d58 100644
--- b/src/main/webapp/app/account/account.route.ts
+++ a/src/main/webapp/app/account/account.route.ts
@@ -4,16 +4,8 @@ import activateRoute from './activate/activate.route';
 import passwordRoute from './password/password.route';
 import passwordResetFinishRoute from './password-reset/finish/password-reset-finish.route';
 import passwordResetInitRoute from './password-reset/init/password-reset-init.route';
-import registerRoute from './register/register.route';
 import settingsRoute from './settings/settings.route';
 
-const accountRoutes: Routes = [
-  activateRoute,
-  passwordRoute,
-  passwordResetFinishRoute,
-  passwordResetInitRoute,
-  registerRoute,
-  settingsRoute,
-];
+const accountRoutes: Routes = [activateRoute, passwordRoute, passwordResetFinishRoute, passwordResetInitRoute, settingsRoute];
 
 export default accountRoutes;
diff --git b/src/main/webapp/app/app.routes.ts a/src/main/webapp/app/app.routes.ts
index 6a6513f..b0a763b 100644
--- b/src/main/webapp/app/app.routes.ts
+++ a/src/main/webapp/app/app.routes.ts
@@ -33,6 +33,10 @@ const routes: Routes = [
     loadComponent: () => import('./login/login.component'),
     title: 'login.title',
   },
+  {
+    path: 'payments',
+    loadChildren: () => import(`./payments/payments.route`),
+  },
   {
     path: '',
     loadChildren: () => import(`./entities/entity.routes`),
diff --git b/src/main/webapp/app/config/font-awesome-icons.ts a/src/main/webapp/app/config/font-awesome-icons.ts
index e48344c..fdcb212 100644
--- b/src/main/webapp/app/config/font-awesome-icons.ts
+++ a/src/main/webapp/app/config/font-awesome-icons.ts
@@ -37,6 +37,11 @@ import {
   faUsers,
   faUsersCog,
   faWrench,
+  faMoneyBill1,
+  faCloudArrowDown,
+  faCloudArrowUp,
+  faFileExcel,
+  faPlay,
   // jhipster-needle-add-icon-import
 } from '@fortawesome/free-solid-svg-icons';
 
@@ -79,5 +84,10 @@ export const fontAwesomeIcons = [
   faUsers,
   faUsersCog,
   faWrench,
+  faMoneyBill1,
+  faCloudArrowDown,
+  faCloudArrowUp,
+  faFileExcel,
+  faPlay,
   // jhipster-needle-add-icon-import
 ];
diff --git b/src/main/webapp/app/home/home.component.html a/src/main/webapp/app/home/home.component.html
index 095ea05..e2555d4 100644
--- b/src/main/webapp/app/home/home.component.html
+++ a/src/main/webapp/app/home/home.component.html
@@ -4,9 +4,9 @@
   </div>
 
   <div class="col-md-9">
-    <h1 class="display-4"><span jhiTranslate="home.title">Welcome, Java Hipster!</span> (Scotty)</h1>
+    <h1 class="display-4"><span jhiTranslate="home.title">Welcome to Scotty!</span></h1>
 
-    <p class="lead" jhiTranslate="home.subtitle">This is your homepage</p>
+    <p class="lead" jhiTranslate="home.subtitle">Your comfortable way to upload payments to payment gateways.</p>
 
     <div>
       @if (account() !== null) {
@@ -19,17 +19,9 @@
         </div>
       } @else {
         <div class="alert alert-warning">
-          <span jhiTranslate="global.messages.info.authenticated.prefix">If you want to </span>
-          <a class="alert-link" (click)="login()" jhiTranslate="global.messages.info.authenticated.link">sign in</a
-          ><span jhiTranslate="global.messages.info.authenticated.suffix"
-            >, you can try the default accounts:<br />- Administrator (login=&quot;admin&quot; and password=&quot;admin&quot;) <br />- User
-            (login=&quot;user&quot; and password=&quot;user&quot;).</span
-          >
-        </div>
-
-        <div class="alert alert-warning">
-          <span jhiTranslate="global.messages.info.register.noaccount">You don&apos;t have an account yet?</span>&nbsp;
-          <a class="alert-link" routerLink="/account/register" jhiTranslate="global.messages.info.register.link">Register a new account</a>
+          <span jhiTranslate="global.messages.info.authenticated.prefix">Please </span>
+          <a class="alert-link" (click)="login()" jhiTranslate="global.messages.info.authenticated.link">sign in</a>
+          <span jhiTranslate="global.messages.info.authenticated.suffix">.</span>
         </div>
       }
     </div>
diff --git b/src/main/webapp/app/home/home.component.scss a/src/main/webapp/app/home/home.component.scss
index 066c9aa..731067e 100644
--- b/src/main/webapp/app/home/home.component.scss
+++ a/src/main/webapp/app/home/home.component.scss
@@ -6,7 +6,7 @@ Main page styles
   display: inline-block;
   width: 347px;
   height: 497px;
-  background: url('../../content/images/jhipster_family_member_2.svg') no-repeat center top;
+  background: url('../../content/images/scotty.png') no-repeat center top;
   background-size: contain;
 }
 
diff --git b/src/main/webapp/app/layouts/footer/footer.component.html a/src/main/webapp/app/layouts/footer/footer.component.html
index 30aca31..856ba8f 100644
--- b/src/main/webapp/app/layouts/footer/footer.component.html
+++ a/src/main/webapp/app/layouts/footer/footer.component.html
@@ -1,3 +1,3 @@
 <div class="footer">
-  <p jhiTranslate="footer">This is your footer</p>
+  <p jhiTranslate="footer">Beam me up Scotty!</p>
 </div>
diff --git b/src/main/webapp/app/layouts/navbar/navbar.component.html a/src/main/webapp/app/layouts/navbar/navbar.component.html
index 81c34e8..89698fb 100644
--- b/src/main/webapp/app/layouts/navbar/navbar.component.html
+++ a/src/main/webapp/app/layouts/navbar/navbar.component.html
@@ -27,6 +27,60 @@
             </span>
           </a>
         </li>
+        @if (account !== null) {
+          <li
+            ngbDropdown
+            class="nav-item dropdown pointer"
+            display="dynamic"
+            routerLinkActive="active"
+            [routerLinkActiveOptions]="{ exact: true }"
+          >
+            <a class="nav-link dropdown-toggle" ngbDropdownToggle href="javascript:void(0);" id="payments-menu" data-cy="payments">
+              <span>
+                <fa-icon icon="money-bill-1"></fa-icon>
+                <span jhiTranslate="global.menu.payments.main">Payments</span>
+              </span>
+            </a>
+            <ul class="dropdown-menu" ngbDropdownMenu aria-labelledby="payments-menu">
+              <li>
+                <a
+                  class="dropdown-item"
+                  routerLink="/payments/upload-payments"
+                  routerLinkActive="active"
+                  [routerLinkActiveOptions]="{ exact: true }"
+                  (click)="collapseNavbar()"
+                >
+                  <fa-icon icon="cloud-arrow-up" [fixedWidth]="true"></fa-icon>
+                  <span jhiTranslate="global.menu.payments.uploadPayments">Upload Payments</span>
+                </a>
+              </li>
+              <li>
+                <a
+                  class="dropdown-item"
+                  routerLink="/payments/download-payments"
+                  routerLinkActive="active"
+                  [routerLinkActiveOptions]="{ exact: true }"
+                  (click)="collapseNavbar()"
+                >
+                  <fa-icon icon="cloud-arrow-down" [fixedWidth]="true"></fa-icon>
+                  <span jhiTranslate="global.menu.payments.downloadPayments">Download Payments</span>
+                </a>
+              </li>
+              <li>
+                <a
+                  class="dropdown-item"
+                  routerLink="/payments/download-reconciliations"
+                  routerLinkActive="active"
+                  [routerLinkActiveOptions]="{ exact: true }"
+                  (click)="collapseNavbar()"
+                >
+                  <fa-icon icon="cloud-arrow-down" [fixedWidth]="true"></fa-icon>
+                  <span jhiTranslate="global.menu.payments.downloadReconciliations">Download Reconciliations</span>
+                </a>
+              </li>
+            </ul>
+          </li>
+        }
         <!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here -->
         @if (account() !== null) {
           <li
@@ -233,18 +287,6 @@
                   <span jhiTranslate="global.menu.account.login">Sign in</span>
                 </a>
               </li>
-              <li>
-                <a
-                  class="dropdown-item"
-                  routerLink="/account/register"
-                  routerLinkActive="active"
-                  (click)="collapseNavbar()"
-                  data-cy="register"
-                >
-                  <fa-icon icon="user-plus" [fixedWidth]="true"></fa-icon>
-                  <span jhiTranslate="global.menu.account.register">Register</span>
-                </a>
-              </li>
             }
           </ul>
         </li>
diff --git b/src/main/webapp/app/login/login.component.html a/src/main/webapp/app/login/login.component.html
index c018720..9993814 100644
--- b/src/main/webapp/app/login/login.component.html
+++ a/src/main/webapp/app/login/login.component.html
@@ -49,11 +49,6 @@
           >Did you forget your password?</a
         >
       </div>
-
-      <div class="alert alert-warning">
-        <span jhiTranslate="global.messages.info.register.noaccount">You don&apos;t have an account yet?</span>
-        <a class="alert-link" routerLink="/account/register" jhiTranslate="global.messages.info.register.link">Register a new account</a>
-      </div>
     </div>
   </div>
 </div>
diff --git b/src/main/webapp/app/shared/shared.module.ts a/src/main/webapp/app/shared/shared.module.ts
index 6511f7b..93559a3 100644
--- b/src/main/webapp/app/shared/shared.module.ts
+++ a/src/main/webapp/app/shared/shared.module.ts
@@ -8,12 +8,13 @@ import FindLanguageFromKeyPipe from './language/find-language-from-key.pipe';
 import TranslateDirective from './language/translate.directive';
 import { AlertComponent } from './alert/alert.component';
 import { AlertErrorComponent } from './alert/alert-error.component';
+import DndDirective from './directives/dnd.directive';
 
 /**
  * Application wide Module
  */
 @NgModule({
-  imports: [AlertComponent, AlertErrorComponent, FindLanguageFromKeyPipe, TranslateDirective],
+  imports: [AlertComponent, AlertErrorComponent, FindLanguageFromKeyPipe, TranslateDirective, DndDirective],
   exports: [
     CommonModule,
     NgbModule,
@@ -23,6 +24,7 @@ import { AlertErrorComponent } from './alert/alert-error.component';
     TranslateModule,
     FindLanguageFromKeyPipe,
     TranslateDirective,
+    DndDirective,
   ],
 })
 export default class SharedModule {}
diff --git b/src/main/webapp/i18n/en/global.json a/src/main/webapp/i18n/en/global.json
index 10a47d6..b6e833d 100644
--- b/src/main/webapp/i18n/en/global.json
+++ a/src/main/webapp/i18n/en/global.json
@@ -4,6 +4,12 @@
     "browsehappy": "You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/?locale=en\">upgrade your browser</a> to improve your experience.",
     "menu": {
       "home": "Home",
+      "payments": {
+        "main": "Payments",
+        "uploadPayments": "Upload Payment Files",
+        "downloadPayments": "Download Payment Files",
+        "downloadReconciliations": "Download Reconciliation Files"
+      },
       "jhipster-needle-menu-add-element": "JHipster will add additional menu entries here (do not translate!)",
       "entities": {
         "main": "Entities",
@@ -51,9 +57,9 @@
     "messages": {
       "info": {
         "authenticated": {
-          "prefix": "If you want to ",
+          "prefix": "Please ",
           "link": "sign in",
-          "suffix": ", you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\")."
+          "suffix": "."
         },
         "register": {
           "noaccount": "You don't have an account yet?",
@@ -147,5 +153,5 @@
       "not.image": "File was expected to be an image but was found to be \"{{ fileType }}\""
     }
   },
-  "footer": "This is your footer"
+  "footer": "Beam me up Scotty!"
 }
diff --git b/src/main/webapp/i18n/en/home.json a/src/main/webapp/i18n/en/home.json
index d9fc499..cf9e9f7 100644
--- b/src/main/webapp/i18n/en/home.json
+++ a/src/main/webapp/i18n/en/home.json
@@ -1,7 +1,7 @@
 {
   "home": {
-    "title": "Welcome, Java Hipster!",
-    "subtitle": "This is your homepage",
+    "title": "Welcome to Scotty!",
+    "subtitle": "Your comfortable way to upload payments to payment gateways.",
     "logged": {
       "message": "You are logged in as user \"{{username}}\"."
     },
